server {
    listen       80;
    server_name  localhost;

    # Root directory
    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # Static files with proper MIME types
    location ~* \.(css)$ {
        add_header Content-Type "text/css; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    location ~* \.(js)$ {
        add_header Content-Type "application/javascript; charset=utf-8";
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    location ~* \.(woff|woff2|ttf|eot)$ {
        add_header Content-Type "application/font-woff";
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Main application route
    location / {
        try_files $uri $uri/ /index.html;

        # Security headers
        add_header X-Frame-Options "ALLOW-FROM https://kibana.anhkiet.xyz" always;
        add_header Content-Security-Policy "frame-ancestors 'self' https://kibana.anhkiet.xyz" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://kibana.anhkiet.xyz' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Proxy configuration for Kibana
    location /kibana/ {
        proxy_pass https://kibana.anhkiet.xyz/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    # Error pages
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # Handle 404 errors
    error_page 404 /index.html;
}
